services:
  main:
    container_name: main
    build:
      context: .
      dockerfile: ./build/main.Dockerfile
    restart: always
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
    env_file:
      - .env
    ports:
      - "8080:8080"
    networks:
      - pet-adopter-network
    volumes:
      - type: bind
        source: ${LOG_DIRECTORY}
        target: /var/log/PetAdopter
      - type: bind
        source: ${PHOTO_BASE_PATH}
        target: /var/pet_adopter_photos

  postgres:
    env_file:
      - .env
    container_name: postgres
    image: postgres:15.0
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - pet-adopter-network
    volumes:
      - ./build/create_tables.sql:/docker-entrypoint-initdb.d/initdb.sql
      - pet-adopter-postgres-data:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis:latest
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - pet-adopter-redis-data:/var/lib/redis/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "127.0.0.1:6379:6379"
    env_file:
      - .env
    networks:
      - pet-adopter-network

  nginx:
    container_name: nginx
    image: nginx
    depends_on:
      main:
        condition: service_started
    volumes:
      - type: bind
        source: /var/log/nginx/
        target: /var/log/nginx/
      - type: bind
        source: /var/pet_adopter_photos/
        target: /var/pet_adopter_photos/
      - type: bind
        source: ./nginx.conf
        target: /etc/nginx/nginx.conf
    ports:
      - "80:80"
    networks:
      - pet-adopter-network

networks:
  pet-adopter-network:
    name: pet-adopter-network
    driver: bridge

volumes:
  pet-adopter-postgres-data:
  pet-adopter-redis-data:
